<templateSet group="Custom">
  <template name="gw" value="// Given&#10;&#10;// When &amp; Then&#10;" description="Given - When &amp; Then" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="gwt" value="// Given&#10;&#10;// When &#10;&#10;// Then&#10;" description="Given - When - Then" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="hmf" value="&lt;header&gt;&lt;/header&gt;&#10;&#10;&lt;main&gt;&#10;&#10;&lt;/main&gt;&#10;&#10;&lt;footer&gt;&lt;/footer&gt;&#10;" description="header - main - footer" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
    </context>
  </template>
  <template name="im1" value="import static org.assertj.core.api.Assertions.*;&#10;" description="import assertj Assertions" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="im2" value="import static org.assertj.core.api.Assertions.*;&#10;import static org.mockito.ArgumentMatchers.*;&#10;import static org.mockito.BDDMockito.*;&#10;" description="(Service) import BDDMockito" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="im3" value="import static org.mockito.ArgumentMatchers.*;&#10;import static org.mockito.BDDMockito.*;&#10;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;&#10;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;" description="(Controller) import BBDMockito and MockMvc" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="logm" value="log.info(&quot;$CLASS_NAME$.$METHOD_NAME$&quot;);" description="Prints current class and method names to log.info" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="false" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="logp" value="log.info($FORMAT$);" description="Prints method parameter names and values to log.info" toReformat="true" toShortenFQNames="true">
    <variable name="FORMAT" expression="groovyScript(&quot;def params = _1.withIndex().collect { el, index -&gt; el + ' = {}' }.join(', '); return '\&quot;' + params + '\&quot;' + ', ' + _1.join(', ')&quot;, methodParameters(), methodParameterTypes()) " defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>